name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v4

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ## Changes

            See [CHANGELOG.md](CHANGELOG.md) for details.

            ## Downloads

            - Linux: `pangea-linux-x64`
            - macOS: `pangea-macos-x64` 
            - Windows: `pangea-windows-x64.exe`

            ## Installation

            Download the appropriate binary for your platform and place it in your PATH.

            ## Usage

            ```bash
            # Interactive mode
            ./pangea

            # Execute file
            ./pangea examples/hello.pangea

            # Evaluate expression
            ./pangea -e "plus 2 3"
            ```
          draft: false
          prerelease: false

  build-and-upload:
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            asset_name: pangea-linux-x64
          - os: macos-latest
            asset_name: pangea-macos-x64
          - os: windows-latest
            asset_name: pangea-windows-x64.exe

    steps:
      - uses: actions/checkout@v4

      - name: Set up build environment (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-11 g++-11
          echo "CC=gcc-11" >> $GITHUB_ENV
          echo "CXX=g++-11" >> $GITHUB_ENV

      - name: Set up build environment (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install cmake

      - name: Set up build environment (Windows)
        if: matrix.os == 'windows-latest'
        uses: microsoft/setup-msbuild@v1.3

      - name: Build
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          cmake --build . --config Release

      - name: Prepare artifact (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          cd build
          strip pangea
          cp pangea ../pangea-artifact

      - name: Prepare artifact (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          cd build
          copy Release\pangea.exe ..\pangea-artifact.exe

      - name: Upload Release Asset (Unix)
        if: matrix.os != 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./pangea-artifact
          asset_name: ${{ matrix.asset_name }}
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./pangea-artifact.exe
          asset_name: ${{ matrix.asset_name }}
          asset_content_type: application/octet-stream
